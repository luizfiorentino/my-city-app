// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Issue {
  id                String        @id @default(uuid())
  userName          String        
  description       String?
  location          String?
  latitude          Float?
  longitude         Float?
  createdAt         DateTime      @default(now())
  updatedAt         DateTime      @updatedAt
  statusChange      StatusChange[]
  images            Image[]
  email             String?
}




model Image {
  id                String        @id @default(uuid())
  url               String
  createdAt         DateTime      @default(now())
  updatedAt         DateTime      @updatedAt
  issues            Issue[]
}



model StatusChange {
  id                String        @id @default(uuid())
  status            String 
  message           String
  createdAt         DateTime      @default(now())
  issueId           String
  issue             Issue         @relation(fields: [issueId], references: [id])
          
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

// Just to keep as reference (previous version)
// model Issue {
//   id                String        @id @default(uuid())
//   // id String @id @default(auto()) @map("_id") @db.ObjectId
//   userName          String        
//   description       String?
//   location          String
//   createdAt         DateTime      @default(now())
//   updatedAt         DateTime      @updatedAt
//   statusChange      StatusChange[]
//   images            Image[]
// }

